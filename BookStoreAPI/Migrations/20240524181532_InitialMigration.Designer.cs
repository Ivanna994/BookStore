// <auto-generated />
using BookStore.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStoreAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240524181532_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Charles Dickens"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Paulo Coelho"
                        },
                        new
                        {
                            AuthorId = 3,
                            Name = "J. K. Rowling"
                        },
                        new
                        {
                            AuthorId = 4,
                            Name = "Agatha Christie"
                        },
                        new
                        {
                            AuthorId = 5,
                            Name = "William Shakespeare"
                        },
                        new
                        {
                            AuthorId = 6,
                            Name = "Stephen King"
                        },
                        new
                        {
                            AuthorId = 7,
                            Name = "Jane Austen"
                        },
                        new
                        {
                            AuthorId = 8,
                            Name = "Leo Tolstoy"
                        });
                });

            modelBuilder.Entity("BookStore.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Title = "A Tale of Two Cities"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            Title = "Dombey and Son"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 1,
                            Title = "David Copperfield"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 1,
                            Title = "Martin Chuzzlewit"
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 2,
                            Title = "The Alchemist"
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 2,
                            Title = "Brida"
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 2,
                            Title = "Aleph"
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 2,
                            Title = "Amor"
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 2,
                            Title = "Brida"
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 2,
                            Title = "Brida"
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 2,
                            Title = "Brida"
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 2,
                            Title = "Brida"
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 3,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            BookId = 14,
                            AuthorId = 3,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            BookId = 15,
                            AuthorId = 3,
                            Title = "Harry Potter and the Prisoner of Azkaban"
                        },
                        new
                        {
                            BookId = 16,
                            AuthorId = 3,
                            Title = "Harry Potter and the Goblet of Fire"
                        },
                        new
                        {
                            BookId = 17,
                            AuthorId = 3,
                            Title = "Harry Potter and the Order of the Phoenix"
                        },
                        new
                        {
                            BookId = 18,
                            AuthorId = 3,
                            Title = "Harry Potter and the Half-Blood Prince"
                        },
                        new
                        {
                            BookId = 19,
                            AuthorId = 3,
                            Title = "Harry Potter and the Deathly Hallows"
                        },
                        new
                        {
                            BookId = 20,
                            AuthorId = 3,
                            Title = "Harry Potter and the Cursed Child"
                        },
                        new
                        {
                            BookId = 21,
                            AuthorId = 4,
                            Title = "And Then There Were None"
                        },
                        new
                        {
                            BookId = 22,
                            AuthorId = 4,
                            Title = "The Murder of Roger Ackroyd"
                        },
                        new
                        {
                            BookId = 23,
                            AuthorId = 4,
                            Title = "The Hollow"
                        },
                        new
                        {
                            BookId = 24,
                            AuthorId = 5,
                            Title = "Hamlet"
                        },
                        new
                        {
                            BookId = 25,
                            AuthorId = 5,
                            Title = "Romeo and Juliet"
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 6,
                            Title = "The Shining"
                        },
                        new
                        {
                            BookId = 27,
                            AuthorId = 7,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            BookId = 28,
                            AuthorId = 8,
                            Title = "War and Peace"
                        },
                        new
                        {
                            BookId = 29,
                            AuthorId = 8,
                            Title = "Anna Karenina"
                        },
                        new
                        {
                            BookId = 30,
                            AuthorId = 8,
                            Title = "Resurrection"
                        });
                });

            modelBuilder.Entity("BookStore.Entities.Book", b =>
                {
                    b.HasOne("BookStore.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
